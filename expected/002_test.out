UPDATE source.t1 SET name = null WHERE id = 1;
UPDATE 1
INSERT INTO source.t2 (id, age, name) SELECT 2002, 2^(16-1), 'foo';
INSERT 0 1
SELECT target, statement FROM run();
  target   |      statement       
-----------+----------------------
 public.t2 | CALL tools.start(5);
 public.t2 | CALL tools.start(6);
 public.t1 | CALL tools.start(4);
(3 rows)

-- start(4) should fail because of the NOT NULL constraint
CALL start(4);
psql:sql/002_test.sql:8: NOTICE:  Executing: TRUNCATE public.t1
psql:sql/002_test.sql:8: NOTICE:  Executing: INSERT INTO public.t1 SELECT id, name FROM source.t1 WHERE id > 0  ORDER BY id 
psql:sql/002_test.sql:8: ERROR:  null value in column "name" of relation "t1" violates not-null constraint
CONTEXT:  SQL statement "WITH inserted AS (INSERT INTO public.t1 SELECT id, name FROM source.t1 WHERE id > 0  ORDER BY id  RETURNING id) SELECT max(id) AS lastseq, count(*) AS rows FROM inserted"
PL/pgSQL function start(bigint) line 50 at EXECUTE
CONTEXT:  PL/pgSQL function start(bigint) line 81 at RAISE
-- start(5) should fail because of out of range value
CALL start(5);
psql:sql/002_test.sql:11: NOTICE:  Executing: INSERT INTO public.t2 SELECT id, name, age FROM source.t2 WHERE id > 2000 AND id % 2 = 0 ORDER BY id LIMIT 200
psql:sql/002_test.sql:11: ERROR:  smallint out of range
CONTEXT:  SQL statement "WITH inserted AS (INSERT INTO public.t2 SELECT id, name, age FROM source.t2 WHERE id > 2000 AND id % 2 = 0 ORDER BY id LIMIT 200 RETURNING id) SELECT max(id) AS lastseq, count(*) AS rows FROM inserted"
PL/pgSQL function start(bigint) line 50 at EXECUTE
CONTEXT:  PL/pgSQL function start(bigint) line 81 at RAISE
-- start(7) should fail because job_id does not exist
CALL start(7);
psql:sql/002_test.sql:14: ERROR:  Job 7 not found
CONTEXT:  PL/pgSQL function start(bigint) line 17 at RAISE
-- start(6) should succeed
CALL start(6);
psql:sql/002_test.sql:17: NOTICE:  Executing: INSERT INTO public.t2 SELECT id, name, age FROM source.t2 WHERE id > 1999 AND id % 2 = 1 ORDER BY id LIMIT 200
CALL
SELECT run_id, job_id, config_id, lastseq, rows, state
  FROM job WHERE run_id = 2;
 run_id | job_id | config_id | lastseq | rows |   state   
--------+--------+-----------+---------+------+-----------
      2 |      4 |         1 |       0 |    0 | failed
      2 |      5 |         2 |    2000 |    0 | failed
      2 |      6 |         3 |    1999 |    0 | completed
(3 rows)

SELECT run_id, target, rows, state
  FROM report WHERE run_id = 2 ORDER BY target;
 run_id |  target   | rows | state  
--------+-----------+------+--------
      2 | public.t1 |    0 | failed
      2 | public.t2 |    0 | failed
(2 rows)

